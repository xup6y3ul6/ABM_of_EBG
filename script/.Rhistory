df1 %>% inner_join(df2)
ebg_012 <- read.csv("data/012_b_1114_1_1_p2.csv",
fileEncoding = "UTF-8")
ebg_g1 <- ebg_011 %>%
left_join(ebg_012)
DT::datatable(ebg_g1,
options = list(scrollX = TRUE,
fixedColumns = TRUE))
student
student_long <- pivot_longer(student,
cols = c("math", "chinese", "psychology"), # -ID
names_to = "subjects", values_to = "score")
student_long
student_wide <- pivot_wider(student_long,
names_from = "subjects", values_from = "score")
student_wide
ebg_long <- ebg_g1 %>%
pivot_longer(
cols = c("p1Cash":"p1TotalAsset", "p2Cash":"p2TotalAsset"),
names_to = "money", values_to = "value")
DT::datatable(ebg_long,
options = list(scrollX = TRUE,
fixedColumns = TRUE))
boxplot(value ~ money, data = ebg_long)
DT::datatable(mtcars,
option = list(scrollX = TRUE,
fixedColumns = TRUE))
ggplot(mtcars, aes(x = mpg))
ggplot(mtcars, aes(x = mpg)) +
geom_histogram()
ggplot(mtcars, aes(x = mpg/length(mpg))) +
geom_histogram(fill = "cornflowerblue") + geom_density(color = "tomato")
ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point()
(g <- ggplot(mtcars, aes(x = wt, y = mpg,
color = factor(am), shape = factor(am))) +
geom_point())
g + facet_wrap(~cyl)
(g1 <- g + stat_smooth(method = "loess"))
(g1 <- g + stat_smooth(method = "lm"))
ebg_011 <- read.csv("data/011_b_1114_1_1_p1.csv",
fileEncoding = "UTF-8")
head(ebg_011)
class(ebg_011)
student_long <- pivot_longer(student,
cols = c("math", "chinese", "psychology"), # -ID
names_to = "subjects", values_to = "score")
student_long
student_long <- pivot_longer(student,
cols = math:psychology, # -ID
names_to = "subjects", values_to = "score")
student_long
student_long <- pivot_longer(student,
cols = -ID
names_to = "subjects", values_to = "score")
student_long <- pivot_longer(student,
cols = - ID
names_to = "subjects", values_to = "score")
student_long <- pivot_longer(student,
cols = - ID,
names_to = "subjects", values_to = "score")
student_long
ebg_g1 %>%
filter(Trials >= 21, Trials < 60) %>%
pivot_longer(cols = c("p1Cash", "p2Cash"),
names_to = "player", values_to = "cash") %>%
ggplot(aes(x = Trials, y = cash,
linetype = player)) + #<<
geom_line()
ebg_g1 %>%
filter(Trials >= 21, Trials < 60) %>%
pivot_longer(cols = c("p1Cash", "p2Cash"),
names_to = "player", values_to = "cash") %>%
ggplot(aes(x = Trials, y = cash
)) + #<<
geom_line()
ebg_g1 %>%
filter(Trials >= 21, Trials < 60) %>%
pivot_longer(cols = c("p1Cash", "p2Cash"),
names_to = "player", values_to = "cash") %>%
ggplot(aes(x = Trials, y = cash,
group = player, linetype = player)) + #<<
geom_line()
qt(0.025, 8)
qt(1-0.05, 8)
qt(1-0.025, 8)
pt(2.048, 7)
qt(1-0.025, 7)
qt(1-0.05, 7)
qt(1-0.05, 14)
qt(1-0.025, 14)
qf(0.95, 2, 12)
qf(0.95, 2, 8)
qf(0.95, 4, 8)
Moore
car::More
car::Moore
carData::Moore
sessionInfo()
library(tidyr)
sessionInfo
sessionInfo()
help(gather)
update.packages("tidyr")
install.packages("tidyr")
library(tidyr)
gather(iris)
library(car)
Moore
moore_aov <- aov(fscore~partner.status*conformity, moore)
moore_aov <- aov(fscore~partner.status*conformity, Moore)
Anova(moore_aov, type = "III")
boxplot(conformity~fcategory,Moore)
boxplot(conformity~partner.status,Moore)
Moore$fcategory
moore_aov <- aov(conformity~partner.status*fscore, Moore)
Anova(moore_aov, type = "III")
moore_aov <- aov(conformity~partner.status*fscore, Moore)
anova(moore_aov)
str(moore)
str(Moore)
moore_aov <- aov(conformity~partner.status*fcategory, Moore)
Anova(moore_aov)
Anova(moore_aov, type = "III")
install.packages("R6")
f1 <- function(x) x
f2 <- function(x) invisible(x)
f1(1)  # prints
f2(1)  # does not
Person <- R6Class("Person", list(
name = NULL,
age = NA,
initialize = function(name, age = NA) {
self$name <- name
self$age <- age
},
print = function(...) {
cat("Person: \n")
cat("  Name: ", self$name, "\n", sep = "")
cat("  Age:  ", self$age, "\n", sep = "")
invisible(self)
}
))
library(R5)
library(R6)
Person <- R6Class("Person", list(
name = NULL,
age = NA,
initialize = function(name, age = NA) {
self$name <- name
self$age <- age
},
print = function(...) {
cat("Person: \n")
cat("  Name: ", self$name, "\n", sep = "")
cat("  Age:  ", self$age, "\n", sep = "")
invisible(self)
}
))
nick <- Person$new()
nick
nick <- Person$new(name = "nick", age = "25")
nick
nick$print()
nick$age
nick$age <- 100
nick
nick
nick$print()
moore.f.high <- filter(Moore, fcategory == "high")
moore.f.medium <- filter(Moore, fcategory == "medium")
Moore
class(Moore)
library(tidyverse)
git add .
sessionInfo
sessionInfo()
git checkout -b cat
926/9
*19
926/9*15
setwd("C:/Users/Nick Lin/Desktop/tmp/ABM_of_EBG")
playgame <- function(times, p1type, p2type){
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(Market$price)
return(data)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
source('class1.R', echo=TRUE)     # source
setwd("C:/Users/Nick Lin/Desktop/tmp/ABM_of_EBG/script")
source('class1.R', echo=TRUE)     # source
playgame <- function(times, p1type, p2type){
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(Market$price)
return(data)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
HH <- lapply(1, playgame, p1type = "Hedge", p2type = "Hedge")
HH <- lapply(1, playgame, p1type = "Hedge", p2type = "Hedge")
Market <- Market$new(total = 100) # Market
Market <- Market$new(total = 100) # Market
Market <- Market$new(total = 100) # Market
View(Market)
playgame <- function(times, p1type, p2type){
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(Market$price)
return(data)
rm(Market, P1, P2)
}
HH <- lapply(1, playgame, p1type = "Hedge", p2type = "Hedge")
Market <- Market$new(total = 100) # Market
rm(Market, P1, P2)
Market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
market <- Market$new(total = 100) # Market
source('class1.R', echo=TRUE)     # source
market <- Market$new(total = 100) # Market
market <- Market$new(total = 100) # Market
playgame <- function(times, p1type, p2type){
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:Market$total) {
P1$decide()
P2$decide()
if(i <= 20){
Market$condition("Balance")
} else if (i <= 60){
Market$condition("Bubble")
} else {
Market$condition("Burst")
}
Market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(Market$price)
return(data)
rm(Market, P1, P2)
}
HH <- lapply(1, playgame, p1type = "Hedge", p2type = "Hedge")
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
playgame <- function(times, p1type, p2type){
market <- market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(market$price)
return(data)
rm(market, P1, P2)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
market <- market$new(total = 100) # Market
market <- market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
market <- market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
playgame <- function(times, p1type, p2type){
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(market$price)
return(data)
rm(market, P1, P2)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
playgame <- function(times, p1type, p2type){
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(market$price)
return(data)
rm(market, P1, P2)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
Market$trial
Market$price
market
market$trial
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
source('class1.R', echo=TRUE)     # source
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
for (i in 1:market$total) {
P1$decide()
P2$decide()
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
source('class1.R', echo=TRUE)     # source
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10,"Hedge",100)   #P1
P2 <- Player$new(10000,10,"Hedge",100)  #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
#
cash <- data.frame(rep(1:101),P1$cash, P2$cash)
asset <- data.frame(rep(1:101),P1$asset, P2$asset)
playgame <- function(times, p1type, p2type){
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending()
P2$ending()
}
data <- list(market$price)
return(data)
rm(market, P1, P2)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
P2$ending(market)
playgame <- function(times, p1type, p2type){
market <- Market$new(total = 100) # Market
P1 <- Player$new(10000,10, p1type,100)   #P1
P2 <- Player$new(10000,10, p2type,100)  #P2
for (i in 1:market$total) {
P1$decide(market)
P2$decide(market)
if(i <= 20){
market$condition("Balance")
} else if (i <= 60){
market$condition("Bubble")
} else {
market$condition("Burst")
}
market$game(P1$decision[i],P2$decision[i])
P1$ending(market)
P2$ending(market)
}
data <- list(market$price)
return(data)
rm(market, P1, P2)
}
HH <- lapply(1:2, playgame, p1type = "Hedge", p2type = "Hedge")
HH
HHprice <- sapply(HH, "[[", 1)
HHprice
